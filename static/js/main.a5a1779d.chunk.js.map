{"version":3,"sources":["util.js","components/Products.js","actions/productActions.js","actions/types.js","components/Filter.js","reducers/productReducers.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","this","props","fetchProducts","productItems","products","map","product","className","key","id","href","src","sku","alt","title","util","price","Component","connect","state","filteredItems","dispatch","fetch","then","res","json","catch","err","data","type","payload","Filter","filteredProducts","length","value","sort","onChange","event","sortProducts","target","size","filterProducts","items","filter","x","availableSizes","indexOf","toUpperCase","slice","a","b","initState","combineReducers","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.a5a1779d.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function (num) {\r\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport util from \"../util\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  render() {\r\n    const productItems = this.props.products.map((product) => (\r\n      <div className=\"col-md-4\" key={product.id}>\r\n        <div className=\"thumbnail text-center\">\r\n          <a\r\n            href={`#${product.id}`}\r\n          >\r\n            <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <b>{util.formatCurrency(product.price)}</b>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div className=\"row\">{productItems}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.filteredItems\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProducts })(Products);\r\n","import {\r\n    FETCH_PRODUCTS,\r\n    FILTER_PRODUCTS_BY_SIZE,\r\n    ORDER_PRODUCTS_BY_PRICE,\r\n  } from \"./types\";\r\n  \r\n  export const fetchProducts = () => (dispatch) => {\r\n    fetch(\"http://localhost:8000/products\")\r\n      .then((res) => res.json())\r\n      .catch((err) =>\r\n        fetch(\"db.json\")\r\n          .then((res) => res.json())\r\n          .then((data) => data.products)\r\n      )\r\n      .then((data) => {\r\n        dispatch({ type: FETCH_PRODUCTS, payload: data });\r\n      });\r\n  };\r\n  \r\n  export const filterProducts = (products, size) => (dispatch) => {\r\n    dispatch({\r\n      type: FILTER_PRODUCTS_BY_SIZE,\r\n      payload: {\r\n        size: size,\r\n        items:\r\n          size === \"\"\r\n            ? products\r\n            : products.filter(\r\n                (x) => x.availableSizes.indexOf(size.toUpperCase()) >= 0\r\n              ),\r\n      },\r\n    });\r\n  };\r\n  \r\n  export const sortProducts = (items, sort) => (dispatch) => {\r\n    const products = items.slice();\r\n    if (sort !== \"\") {\r\n      products.sort((a, b) =>\r\n        sort === \"lowestprice\"\r\n          ? a.price > b.price\r\n            ? 1\r\n            : -1\r\n          : a.price < b.price\r\n          ? 1\r\n          : -1\r\n      );\r\n    } else {\r\n      products.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n    }\r\n    dispatch({\r\n      type: ORDER_PRODUCTS_BY_PRICE,\r\n      payload: {\r\n        sort: sort,\r\n        items: products,\r\n      },\r\n    });\r\n  };\r\n  ","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">{`${this.props.filteredProducts.length} products found.`}</div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            Order by Price\r\n            <select\r\n              className=\"form-control\"\r\n              value={this.props.sort}\r\n              onChange={(event) => {\r\n                this.props.sortProducts(\r\n                  this.props.filteredProducts,\r\n                  event.target.value\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"lowestprice\">Lowest to highest</option>\r\n              <option value=\"highestprice\">Highest to lowest</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            {\" \"}\r\n            Select Size\r\n            <select\r\n              className=\"form-control\"\r\n              value={this.props.size}\r\n              onChange={(event) => {\r\n                this.props.filterProducts(\r\n                  this.props.products,\r\n                  event.target.value\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">ALL</option>\r\n              <option value=\"x\">XS</option>\r\n              <option value=\"s\">S</option>\r\n              <option value=\"m\">M</option>\r\n              <option value=\"l\">L</option>\r\n              <option value=\"xl\">XL</option>\r\n              <option value=\"xxl\">XXL</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  size: state.products.size,\r\n  sort: state.products.sort,\r\n});\r\nexport default connect(mapStateToProps, { filterProducts, sortProducts })(\r\n  Filter\r\n);\r\n","import {\r\n    FETCH_PRODUCTS,\r\n    FILTER_PRODUCTS_BY_SIZE,\r\n    ORDER_PRODUCTS_BY_PRICE,\r\n  } from \"../actions/types\";\r\n  \r\n  const initState = { items: [], filteredItems: [], size: \"\", sort: \"\" };\r\n  export default function (state = initState, action) {\r\n    switch (action.type) {\r\n      case FETCH_PRODUCTS:\r\n        return { ...state, items: action.payload, filteredItems: action.payload };\r\n      case FILTER_PRODUCTS_BY_SIZE:\r\n        return {\r\n          ...state,\r\n          filteredItems: action.payload.items,\r\n          size: action.payload.size,\r\n          sort: \"\"\r\n        };\r\n      case ORDER_PRODUCTS_BY_PRICE:\r\n        return {\r\n          ...state,\r\n          filteredItems: action.payload.items,\r\n          sort: action.payload.sort,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\nimport productReducers from \"./productReducers\";\r\n\r\nexport default combineReducers({\r\n  products: productReducers,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducers,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport Products from \"./components/Products\";\nimport Filter from \"./components/Filter\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <h1>E-commerce Shopping Cart Application</h1>\n          <hr />\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <Filter />\n              <hr />\n              <Products />\n            </div>\n            <div className=\"col-md-3\">\n            </div>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}